funcs:
    objectId: # the index of deepCoadd_obj IS the objectId
        functor: Index
    parentObjectId:
        functor: Column
        args: parent
        dataset: ref
    coord_ra:
        # reference position for merged "ref" cat. Required by db. Not in DPDD
        functor: RAColumn
        dataset: ref
    coord_dec:
        # reference position for merged "ref" cat. Required by db. Not in DPDD
        # coord_dec because "dec" is reserved in most SQL DBs
        functor: DecColumn
        dataset: ref
    ra:
        functor: CoordColumn
        args: coord_ra
        dataset: meas
    decl:
        functor: CoordColumn
        args: coord_dec
        dataset: meas
    # raErr:  not available yet DM-15180
    # decErr: not available yet DM-15180
    # Reference band is same for all measurements
    refBand:
        functor: ReferenceBand
        dataset: ref
    # TODO DM-22241: Evaluate moving point source model
    #  - current plan requires matching to Source Table
    # psRadecTai: No moving point source model yet
    # psRadec: No moving point source model yet
    # psPm: No moving point source model yet
    # psParallax: No moving point source model yet
    psfFlux:
        functor: NanoJansky
        dataset: forced_src
        args: slot_PsfFlux_instFlux
    psfFluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - slot_PsfFlux_instFlux
            - slot_PsfFlux_instFluxErr
    free_psfFlux:
        functor: NanoJansky
        dataset: meas
        args: slot_PsfFlux_instFlux
    free_psfFluxErr:
        functor: NanoJanskyErr
        dataset: meas
        args:
            - slot_PsfFlux_instFlux
            - slot_PsfFlux_instFluxErr
    free_psfFlux_flag:
        functor: Column
        dataset: meas
        args: slot_PsfFlux_flag
    # Assume the database will provide UDFs for Mags
    # psCov:
    #     Flux should be somewhere in the name?
    #     How best to store cov matrix?

    # Replace multifit-predicted parameters with other goodness-of-fit parameters
    # e.g. number of iterations, chi2/dof, derivative of objective function
    # psLnL:  No moving point source model yet
    # psChi2:  No moving point source model yet
    # psNdata: No moving point source model yet

    # DRP is working the the Bulge-Disk model fluxes
    # In the meantime, CModel is the best
    # CModel fluxes have alias slot_ModelFlux
    # bdRadec: # Same as SdssCentroid
    # AB + theta
    # E1+Re in DPDD is for a reason is no longer valid
    # We once thought we were going to do shear from these.
    bdE1:
        functor: E1
        dataset: meas
        args:
            - modelfit_CModel_ellipse_xx
            - modelfit_CModel_ellipse_xy
            - modelfit_CModel_ellipse_yy
    # rbdE1Err:  Not computed
    bdE2:
        functor: E2
        dataset: meas
        args:
            - modelfit_CModel_ellipse_xx
            - modelfit_CModel_ellipse_xy
            - modelfit_CModel_ellipse_yy
    # rbdE2Err:  Not computed
    bdReB:
        functor: RadiusFromQuadrupole
        dataset: meas
        args:
            - modelfit_CModel_dev_ellipse_xx
            - modelfit_CModel_dev_ellipse_xy
            - modelfit_CModel_dev_ellipse_yy
    bdReD:
        functor: RadiusFromQuadrupole
        dataset: meas
        args:
            - modelfit_CModel_exp_ellipse_xx
            - modelfit_CModel_exp_ellipse_xy
            - modelfit_CModel_exp_ellipse_yy
    # bdCov: Not computed
    # DM-22251: We need a total galaxy model (BD) flux column:
    # with either a total and fraction in Bulge or Disk
    # We should change the name BD, it assumes algorithm choice
    bdChi2:
        functor: Column
        dataset: meas
        args: modelfit_CModel_objective
    # bdSamples: DM-22242 Remove from the DPDD and
    # replace with other shear estimation parameters. e.g. How e1 and e2 respond to shear.
    bdFluxB:
        functor: NanoJansky
        dataset: meas
        args: modelfit_CModel_dev_instFlux
    bdFluxBErr:
        functor: NanoJanskyErr
        dataset: meas
        args:
            - modelfit_CModel_dev_instFlux
            - modelfit_CModel_dev_instFluxErr
    bdFluxD:
        functor: NanoJansky
        dataset: meas
        args: modelfit_CModel_exp_instFlux
    bdFluxDErr:
        functor: NanoJanskyErr
        dataset: meas
        args:
            - modelfit_CModel_exp_instFlux
            - modelfit_CModel_exp_instFluxErr
    # DM-22243: Replace these with g, r, i, z, y and the blessed fluxes to use for colors
    # Need a new name like "gModelColorFlux", "gMatchedApertureGalaxyFlux", or
    # "gMatchedApertureFlux", "gStdFlux"
        # HSC users still debating between
        #  1) PSF convolved undeblended aperture fluxes?
        #  2) Scarlet outputs?
        # In the meantime use forced CModel
    # grStd:
    # riStd:
    # izStd:
    # zyStd:
    #  PSF GAaP flux
    gaapPsfFlux:
        functor: NanoJansky
        dataset: forced_src
        args: ext_gaap_GaapFlux_1_15x_PsfFlux_instFlux
    gaapPsfFluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - ext_gaap_GaapFlux_1_15x_PsfFlux_instFlux
            - ext_gaap_GaapFlux_1_15x_PsfFlux_instFluxErr
    # 0.5 arcsec sigma GAaP flux
    gaap0p5Flux:
        functor: NanoJansky
        dataset: forced_src
        args: ext_gaap_GaapFlux_1_15x_0_5_instFlux
    gaap0p5FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - ext_gaap_GaapFlux_1_15x_0_5_instFlux
            - ext_gaap_GaapFlux_1_15x_0_5_instFluxErr
    # 0.7 arcsec sigma GAaP flux
    gaap0p7Flux:
        functor: NanoJansky
        dataset: forced_src
        args: ext_gaap_GaapFlux_1_15x_0_7_instFlux
    gaap0p7FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - ext_gaap_GaapFlux_1_15x_0_7_instFlux
            - ext_gaap_GaapFlux_1_15x_0_7_instFluxErr
    # 1.0 arcsec sigma GAaP flux
    gaap1p0Flux:
        functor: NanoJansky
        dataset: forced_src
        args: ext_gaap_GaapFlux_1_15x_1_0_instFlux
    gaap1p0FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - ext_gaap_GaapFlux_1_15x_1_0_instFlux
            - ext_gaap_GaapFlux_1_15x_1_0_instFluxErr
    # 1.5 arcsec sigma GAaP flux
    gaap1p5Flux:
        functor: NanoJansky
        dataset: forced_src
        args: ext_gaap_GaapFlux_1_15x_1_5_instFlux
    gaap1p5FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - ext_gaap_GaapFlux_1_15x_1_5_instFlux
            - ext_gaap_GaapFlux_1_15x_1_5_instFluxErr
    # 2.5 arcsec sigma GAaP flux
    gaap2p5Flux:
        functor: NanoJansky
        dataset: forced_src
        args: ext_gaap_GaapFlux_1_15x_2_5_instFlux
    gaap2p5FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - ext_gaap_GaapFlux_1_15x_2_5_instFlux
            - ext_gaap_GaapFlux_1_15x_2_5_instFluxErr
    # 3.0 arcsec sigma GAaP flux
    gaap3p0Flux:
        functor: NanoJansky
        dataset: forced_src
        args: ext_gaap_GaapFlux_1_15x_3_0_instFlux
    gaap3p0FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - ext_gaap_GaapFlux_1_15x_3_0_instFlux
            - ext_gaap_GaapFlux_1_15x_3_0_instFluxErr
    #  Optimal GAaP flux
    gaapOptimalFlux:
        functor: NanoJansky
        dataset: forced_src
        args: ext_gaap_GaapFlux_1_15x_Optimal_instFlux
    gaapOptimalFluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - ext_gaap_GaapFlux_1_15x_Optimal_instFlux
            - ext_gaap_GaapFlux_1_15x_Optimal_instFluxErr
    # Taking Shape from meas
    ixx:
        functor: Column
        args: slot_Shape_xx
        dataset: meas
    iyy:
        functor: Column
        args: slot_Shape_yy
        dataset: meas
    ixy:
        functor: Column
        args: slot_Shape_xy
        dataset: meas
    i_flag:
        functor: Column
        args: slot_Shape_flag
        dataset: meas
    # Icov: # need to compute
    # DM-22249 Evaluate whether we want to replace IxxPSF/IyyPSF/IxyPSF w/ FWHM
    ixxPSF:
        functor: Column
        args: slot_PsfShape_xx
        dataset: meas
    iyyPSF:
        functor: Column
        args: slot_PsfShape_yy
        dataset: meas
    ixyPSF:
        functor: Column
        args: slot_PsfShape_xy
        dataset: meas
    iPSF_flag:
        functor: Column
        args: slot_PsfShape_flag
        dataset: meas
    ixxRound:
        functor: Column
        args: slot_ShapeRound_xx
        dataset: meas
    iyyRound:
        functor: Column
        args: slot_ShapeRound_yy
        dataset: meas
    ixyRound:
        functor: Column
        args: slot_ShapeRound_xy
        dataset: meas
    iRound_flag:
        functor: Column
        args: slot_ShapeRound_xy
        dataset: meas
    iPSF_flag:
        functor: Column
        args: slot_PsfShape_flag
        dataset: meas
    ixxDebiasedPSF:
        functor: Column
        args: ext_shapeHSM_HsmPsfMomentsDebiased_xx
        dataset: meas
    iyyDebiasedPSF:
        functor: Column
        args: ext_shapeHSM_HsmPsfMomentsDebiased_yy
        dataset: meas
    ixyDebiasedPSF:
        functor: Column
        args:  ext_shapeHSM_HsmPsfMomentsDebiased_xy
        dataset: meas
    iDebiasedPSF_flag:
        functor: Column
        args: ext_shapeHSM_HsmPsfMomentsDebiased_flag
        dataset: meas
    # m4: Request removal from DPDD (DM-22250)
    # Petrosian magnitudes not yet implemented. Planning pacakge DMBP-116
    # Redefine Kron (DM-22245) and Petrosian (DM-22244) columns to report in DPDD
    # petroRad:
    # petroRadErr:
    # petroBand:
    # petroFlux:
    # petroFluxErr:
    # petroRad50:
    # petroRad50Err:
    # petroRad90:
    # petroRad90Err:
    kronRad:
        # Convert to sky coords
        functor: Column
        args: ext_photometryKron_KronFlux_radius
        dataset: meas  # or forced_src?
    # kronRadErr: # Not computed
    # kronBand: replaced with `refBand`
    kronFlux:
        functor: NanoJansky
        dataset: meas  # or forced_src?
        args: ext_photometryKron_KronFlux_instFlux
    kronFluxErr:
        functor: NanoJanskyErr
        dataset: meas  # or forced_src?
        args:
            - ext_photometryKron_KronFlux_instFlux
            - ext_photometryKron_KronFlux_instFluxErr
    # kronRad50: Need to compute DM-16313
    # kronRad50Err: Need to compute DM-16313
    # kronRad90: Need to compute DM-16313
    # kronRad90Err: Need to compute DM-16313
    # apFlux renamed to calibFlux because it is not guaranteed to be an apFlux
    calibFlux:
        functor: NanoJansky
        dataset: meas
        args: slot_CalibFlux_instFlux
    calibFluxErr:
        functor: NanoJanskyErr
        dataset: meas
        args:
            - slot_CalibFlux_instFlux
            - slot_CalibFlux_instFluxErr
    # Not in DPDD. Used for QA
    ap03Flux:
        functor: NanoJansky
        dataset: forced_src
        args: base_CircularApertureFlux_3_0_instFlux
    ap03FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - base_CircularApertureFlux_3_0_instFlux
            - base_CircularApertureFlux_3_0_instFluxErr
    ap03Flux_flag:
        functor: Column
        dataset: forced_src
        args: base_CircularApertureFlux_3_0_flag
    # if we need to add decimal apertures call them e.g. ap04p5Flux
    ap06Flux:
        functor: NanoJansky
        dataset: forced_src
        args: base_CircularApertureFlux_6_0_instFlux
    ap06FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - base_CircularApertureFlux_6_0_instFlux
            - base_CircularApertureFlux_6_0_instFluxErr
    ap06Flux_flag:
        functor: Column
        dataset: forced_src
        args: base_CircularApertureFlux_6_0_flag
    ap09Flux:
        functor: NanoJansky
        dataset: forced_src
        args: base_CircularApertureFlux_9_0_instFlux
    ap09FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - base_CircularApertureFlux_9_0_instFlux
            - base_CircularApertureFlux_9_0_instFluxErr
    ap09Flux_flag:
        functor: Column
        dataset: forced_src
        args: base_CircularApertureFlux_9_0_flag
    ap12Flux:
        functor: NanoJansky
        dataset: forced_src
        args: base_CircularApertureFlux_12_0_instFlux
    ap12FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - base_CircularApertureFlux_12_0_instFlux
            - base_CircularApertureFlux_12_0_instFluxErr
    ap12Flux_flag:
        functor: Column
        dataset: forced_src
        args: base_CircularApertureFlux_12_0_flag
    ap17Flux:
        functor: NanoJansky
        dataset: forced_src
        args: base_CircularApertureFlux_17_0_instFlux
    ap17FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - base_CircularApertureFlux_17_0_instFlux
            - base_CircularApertureFlux_17_0_instFluxErr
    ap17Flux_flag:
        functor: Column
        dataset: forced_src
        args: base_CircularApertureFlux_17_0_flag
    ap25Flux:
        functor: NanoJansky
        dataset: forced_src
        args: base_CircularApertureFlux_25_0_instFlux
    ap25FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - base_CircularApertureFlux_25_0_instFlux
            - base_CircularApertureFlux_25_0_instFluxErr
    ap25Flux_flag:
        functor: Column
        dataset: forced_src
        args: base_CircularApertureFlux_25_0_flag
    ap35Flux:
        functor: NanoJansky
        dataset: forced_src
        args: base_CircularApertureFlux_35_0_instFlux
    ap35FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - base_CircularApertureFlux_35_0_instFlux
            - base_CircularApertureFlux_35_0_instFluxErr
    ap35Flux_flag:
        functor: Column
        dataset: forced_src
        args: base_CircularApertureFlux_35_0_flag
    ap50Flux:
        functor: NanoJansky
        dataset: forced_src
        args: base_CircularApertureFlux_50_0_instFlux
    ap50FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - base_CircularApertureFlux_50_0_instFlux
            - base_CircularApertureFlux_50_0_instFluxErr
    ap50Flux_flag:
        functor: Column
        dataset: forced_src
        args: base_CircularApertureFlux_50_0_flag
    ap70Flux:
        functor: NanoJansky
        dataset: forced_src
        args: base_CircularApertureFlux_70_0_instFlux
    ap70FluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - base_CircularApertureFlux_70_0_instFlux
            - base_CircularApertureFlux_70_0_instFluxErr
    ap70Flux_flag:
        functor: Column
        dataset: forced_src
        args: base_CircularApertureFlux_70_0_flag

    # DM-22246: Change Ap surface brightness to fluxes in DPDD
    # i.e. remove apNann, apMeanSb, apMeanSbSigma
    # DM-22247: Replace Extendedness with a view or paragraph in docs on how to compute
    refExtendedness:
        functor: Column
        args: base_ClassificationExtendedness_value
        dataset: ref
    extendedness:
        functor: Column
        args: base_ClassificationExtendedness_value
        dataset: meas
    # lcPeriodic:  # Not computed. Need multi-epoch forced phot S19
    # lcNonPeriodic:  # Not computed. Need without multi-epoch forced phot S19
    # photoZ:  # Not computed yet

    # COLUMNS ADDED (not in the DPDD)
    x:
        functor: Column
        args: slot_Centroid_x
        dataset: ref
    y:
        functor: Column
        args: slot_Centroid_y
        dataset: ref
    xErr:
        functor: Column
        args: slot_Centroid_xErr
        dataset: ref
    yErr:
        functor: Column
        args: slot_Centroid_yErr
        dataset: ref
    xy_flag:
        functor: Column
        args: slot_Centroid_flag
        dataset: ref
    # Not in DPDD
    blendedness:
        functor: Column
        args: base_Blendedness_abs
        dataset: meas
    # DM-22249: Make FWHM a view of IxxPsf IxyPsf IyyPsf
    # Or remove ixxPsf, IxyPsf, IyyPsf.
    fwhm:
        functor: HsmFwhm
        dataset: meas
    refFwhm:
        functor: HsmFwhm
    cModelFlux:
        functor: NanoJansky
        dataset: forced_src
        args: modelfit_CModel_instFlux
    cModelFluxErr:
        functor: NanoJanskyErr
        dataset: forced_src
        args:
            - modelfit_CModel_instFlux
            - modelfit_CModel_instFluxErr
    cModelFlux_inner:
        functor: NanoJansky
        dataset: forced_src
        args: modelfit_CModel_instFlux_inner
    free_cModelFlux: #to dm-naming things
        functor: NanoJansky
        dataset: meas
        args: modelfit_CModel_instFlux
    free_cModelFluxErr:
        functor: NanoJanskyErr
        dataset: meas
        args:
            - modelfit_CModel_instFlux
            - modelfit_CModel_instFluxErr
    free_cModelFlux_inner:
        functor: NanoJansky
        dataset: meas
        args: modelfit_CModel_instFlux_inner
    free_cModelFlux_flag:
        functor: Column
        dataset: meas
        args: modelfit_CModel_flag
    # exp, dev, total, fracdev
    # We need different ellipticities for shear measurement:
    hsmShapeRegauss_e1:
        functor: Column
        args: ext_shapeHSM_HsmShapeRegauss_e1
        dataset: meas
    hsmShapeRegauss_e2:
        functor: Column
        args: ext_shapeHSM_HsmShapeRegauss_e2
        dataset: meas
    hsmShapeRegauss_sigma:
        functor: Column
        args: ext_shapeHSM_HsmShapeRegauss_sigma
        dataset: meas
    hsmShapeRegauss_flag:
        functor: Column
        args: ext_shapeHSM_HsmShapeRegauss_flag
        dataset: meas
    inputCount:
        functor: Column
        args: base_InputCount_value
        dataset: forced_src
    footprintArea:
        functor: Column
        args: base_FootprintArea_value
        dataset: ref
    sky_object:
        functor: Column
        args: merge_peak_sky
        dataset: ref
    # DM-22247: Add Star/Galaxy sep olumns
    #     - Morphological Star Galaxy Classifier (Names? float 0-1)]
    #     - Morphological + Color (SED-based) Star Galaxy Classifier (Names? float 0-1)]
    # DM-22248: Need to add per object Galactic extinction to post-processing
refFlags:
    # refFlags are columns taken without translation from the ref table
    - detect_isPatchInner
    - detect_isPrimary
    - detect_isTractInner
    - detect_isIsolated
    - detect_fromBlend
    - detect_isDeblendedSource
    - detect_isDeblendedModelSource
    - merge_peak_sky
    - deblend_nChild
    - deblend_skipped
    - slot_Shape_flag
    - slot_Shape_xx
    - slot_Shape_xy
    - slot_Shape_yy
flags:
    # flags are columns taken and exploded per-band from the meas tables
    - base_Blendedness_flag
    - base_PixelFlags_flag_bad
    - base_PixelFlags_flag_clipped
    - base_PixelFlags_flag_clippedCenter
    - base_PixelFlags_flag_cr
    - base_PixelFlags_flag_crCenter
    - base_PixelFlags_flag_edge
    - base_PixelFlags_flag_inexact_psf
    - base_PixelFlags_flag_inexact_psfCenter
    - base_PixelFlags_flag_interpolated
    - base_PixelFlags_flag_interpolatedCenter
    - base_PixelFlags_flag_offimage
    - base_PixelFlags_flag_saturated
    - base_PixelFlags_flag_saturatedCenter
    - base_PixelFlags_flag_sensor_edge
    - base_PixelFlags_flag_sensor_edgeCenter
    - base_PixelFlags_flag_suspect
    - base_PixelFlags_flag_suspectCenter
    - base_ClassificationExtendedness_flag
    - calib_astrometry_used
    - calib_photometry_reserved
    - calib_photometry_used
    - calib_psf_candidate
    - calib_psf_reserved
    - calib_psf_used
    - slot_ApFlux_flag
    - slot_ApFlux_flag_apertureTruncated
    - slot_ApFlux_flag_sincCoeffsTruncated
    - slot_CalibFlux_flag
    - slot_CalibFlux_flag_apertureTruncated
    - slot_CalibFlux_flag_sincCoeffsTruncated
    - slot_Centroid_flag
    - slot_Centroid_x
    - slot_Centroid_xErr
    - slot_Centroid_y
    - slot_Centroid_yErr
    - ext_photometryKron_KronFlux_flag
    - ext_photometryKron_KronFlux_flag_bad_radius
    - ext_photometryKron_KronFlux_flag_bad_shape
    - ext_photometryKron_KronFlux_flag_bad_shape_no_psf
    - ext_photometryKron_KronFlux_flag_edge
    - ext_photometryKron_KronFlux_flag_no_fallback_radius
    - ext_photometryKron_KronFlux_flag_no_minimum_radius
    - ext_photometryKron_KronFlux_flag_small_radius
    - ext_photometryKron_KronFlux_flag_used_minimum_radius
    - ext_photometryKron_KronFlux_flag_used_psf_radius
forcedFlags:
    # - forced source
    - base_InputCount_flag
    - base_InputCount_flag_noInputs
    - slot_PsfFlux_area
    - slot_PsfFlux_flag
    - slot_PsfFlux_flag_apCorr
    - slot_PsfFlux_flag_edge
    - slot_PsfFlux_flag_noGoodPixels
    - modelfit_CModel_flag
    - modelfit_CModel_flag_apCorr
    - ext_gaap_GaapFlux_flag
    - ext_gaap_GaapFlux_flag_edge
    - ext_gaap_GaapFlux_1_15x_flag_gaussianization
    - ext_gaap_GaapFlux_1_15x_Optimal_flag_bigPsf
    - ext_gaap_GaapFlux_1_15x_0_5_flag_bigPsf
    - ext_gaap_GaapFlux_1_15x_0_7_flag_bigPsf
    - ext_gaap_GaapFlux_1_15x_1_0_flag_bigPsf
    - ext_gaap_GaapFlux_1_15x_1_5_flag_bigPsf
    - ext_gaap_GaapFlux_1_15x_2_5_flag_bigPsf
    - ext_gaap_GaapFlux_1_15x_3_0_flag_bigPsf
flag_rename_rules:
    # Taken from db-meas-forced
    - ['modelfit_C', 'c']
    - ['base_PixelFlags_flag', 'pixelFlags']
    - ['base_CircularApertureFlux', 'apFlux']
    - ['ext_convolved_', '']
    - ['ext_gaap_GaapFlux_1_15x_0_5', 'gaap0p5Flux']
    - ['ext_gaap_GaapFlux_1_15x_0_7', 'gaap0p7Flux']
    - ['ext_gaap_GaapFlux_1_15x_1_0', 'gaap1p0Flux']
    - ['ext_gaap_GaapFlux_1_15x_1_5', 'gaap1p5Flux']
    - ['ext_gaap_GaapFlux_1_15x_2_5', 'gaap2p5Flux']
    - ['ext_gaap_GaapFlux_1_15x_3_0', 'gaap3p0Flux']
    - ['ext_gaap_GaapFlux_1_15x_Optimal', 'gaapOptimalFlux']
    - ['ext_gaap_GaapFlux_1_15x', 'gaapFlux']
    - ['ext_gaap_GaapFlux', 'gaapFlux']
    - ['undeblended_base', 'undeblended']
    - ['undeblended_ext_photometryKron', 'undeblended']
    - ['ext_photometryKron_KronFlux', 'kronFlux']
    - ['slot_Centroid', 'centroid']
    - ['slot_Calib', 'calib']
    - ['slot_Psf', 'psf']
    - ['slot_Shape', 'shape']
    - ['slot_ApFlux', 'apFlux']
    - ['base_Blendedness', 'blendedness']
    - ['base_PixelFlags_flag', 'pixelFlags']
    - ['base_ClassificationE', 'e']
    - ['base_Psf', 'psf']
    - ['base_CircularApertureFlux', 'apFlux']
    - ['base_FootprintArea', 'footprintArea']
    - ['base_Jacobian', 'jacobian']
    - ['base_Input', 'input']
    - ['ext_convolved_', '']
